{"version":3,"sources":["ImageStylePropTypes.js"],"names":["ColorPropType","require","ImageResizeMode","LayoutPropTypes","ReactPropTypes","ShadowPropTypesIOS","TransformPropTypes","ImageStylePropTypes","resizeMode","oneOf","Object","keys","backfaceVisibility","backgroundColor","borderColor","borderWidth","number","borderRadius","overflow","tintColor","opacity","overlayColor","string","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","module","exports"],"mappings":";AAUA;;;;AAEA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACA,IAAIC,kBAAkBD,QAAQ,iBAAR,CAAtB;AACA,IAAIE,kBAAkBF,QAAQ,iBAAR,CAAtB;AACA,IAAIG,iBAAiBH,QAAQ,YAAR,CAArB;AACA,IAAII,qBAAqBJ,QAAQ,oBAAR,CAAzB;AACA,IAAIK,qBAAqBL,QAAQ,oBAAR,CAAzB;;AAEA,IAAIM,mCACCJ,eADD,EAECE,kBAFD,EAGCC,kBAHD;AAIFE,cAAYJ,eAAeK,KAAf,CAAqBC,OAAOC,IAAP,CAAYT,eAAZ,CAArB,CAJV;AAKFU,sBAAoBR,eAAeK,KAAf,CAAqB,CAAC,SAAD,EAAY,QAAZ,CAArB,CALlB;AAMFI,mBAAiBb,aANf;AAOFc,eAAad,aAPX;AAQFe,eAAaX,eAAeY,MAR1B;AASFC,gBAAcb,eAAeY,MAT3B;AAUFE,YAAUd,eAAeK,KAAf,CAAqB,CAAC,SAAD,EAAY,QAAZ,CAArB,CAVR;;AAeFU,aAAWnB,aAfT;AAgBFoB,WAAShB,eAAeY,MAhBtB;;AAkCFK,gBAAcjB,eAAekB,MAlC3B;;AAqCFC,uBAAqBnB,eAAeY,MArClC;AAsCFQ,wBAAsBpB,eAAeY,MAtCnC;AAuCFS,0BAAwBrB,eAAeY,MAvCrC;AAwCFU,2BAAyBtB,eAAeY;AAxCtC,EAAJ;;AA2CAW,OAAOC,OAAP,GAAiBrB,mBAAjB","file":"ImageStylePropTypes.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ImageStylePropTypes\n * @flow\n * @format\n */\n'use strict';\n\nvar ColorPropType = require('ColorPropType');\nvar ImageResizeMode = require('ImageResizeMode');\nvar LayoutPropTypes = require('LayoutPropTypes');\nvar ReactPropTypes = require('prop-types');\nvar ShadowPropTypesIOS = require('ShadowPropTypesIOS');\nvar TransformPropTypes = require('TransformPropTypes');\n\nvar ImageStylePropTypes = {\n  ...LayoutPropTypes,\n  ...ShadowPropTypesIOS,\n  ...TransformPropTypes,\n  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),\n  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),\n  backgroundColor: ColorPropType,\n  borderColor: ColorPropType,\n  borderWidth: ReactPropTypes.number,\n  borderRadius: ReactPropTypes.number,\n  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),\n\n  /**\n   * Changes the color of all the non-transparent pixels to the tintColor.\n   */\n  tintColor: ColorPropType,\n  opacity: ReactPropTypes.number,\n  /**\n   * When the image has rounded corners, specifying an overlayColor will\n   * cause the remaining space in the corners to be filled with a solid color.\n   * This is useful in cases which are not supported by the Android\n   * implementation of rounded corners:\n   *   - Certain resize modes, such as 'contain'\n   *   - Animated GIFs\n   *\n   * A typical way to use this prop is with images displayed on a solid\n   * background and setting the `overlayColor` to the same color\n   * as the background.\n   *\n   * For details of how this works under the hood, see\n   * http://frescolib.org/docs/rounded-corners-and-circles.html\n   *\n   * @platform android\n   */\n  overlayColor: ReactPropTypes.string,\n\n  // Android-Specific styles\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number,\n};\n\nmodule.exports = ImageStylePropTypes;\n"]}