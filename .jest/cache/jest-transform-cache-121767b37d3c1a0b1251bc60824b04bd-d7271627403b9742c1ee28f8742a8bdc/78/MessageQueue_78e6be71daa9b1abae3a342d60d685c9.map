{"version":3,"sources":["MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","JSTimers","MessageQueue","shouldUninstallGlobalErrorHandler","_lazyCallableModules","_queue","_successCallbacks","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","getTime","uninstallGlobalErrorHandler","installGlobalErrorHandler","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","callFunctionReturnResultAndFlushedQueue","flushedQueue","invokeCallbackAndReturnFlushedQueue","module","method","args","__guard","__callFunction","result","cbID","__invokeCallback","__callImmediates","queue","length","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","isValidArgument","t","val","Array","isArray","every","k","now","nativeFlushQueueImmediate","_inCall","counterEvent","__spy","isFinite","type","methods","__guardUnsafe","__guardSafe","fn","error","reportFatalError","beginEvent","callImmediates","endEvent","moduleMethods","getCallableModule","apply","callID","isSuccess","callback","debug","errorMessage","profileName","spyOrToggle","prototype","console","log","info","JSON","stringify","exports"],"mappings":"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","file":"MessageQueue.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule MessageQueue\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  args: any[],\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\n// eslint-disable-next-line no-bitwise\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\n// Work around an initialization order issue\nlet JSTimers = null;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [number[], number[], any[], number];\n  _successCallbacks: (?Function)[];\n  _failureCallbacks: (?Function)[];\n  _callID: number;\n  _inCall: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n\n  _debugInfo: {[number]: [number, number]};\n  _remoteModuleTable: {[number]: string};\n  _remoteMethodTable: {[number]: string[]};\n\n  __spy: ?(data: SpyData) => void;\n\n  __guard: (() => void) => void;\n\n  constructor(shouldUninstallGlobalErrorHandler: boolean = false) {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = [];\n    this._failureCallbacks = [];\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = new Date().getTime();\n    if (shouldUninstallGlobalErrorHandler) {\n      this.uninstallGlobalErrorHandler();\n    } else {\n      this.installGlobalErrorHandler();\n    }\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this: any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(\n      this,\n    );\n    (this: any).callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(\n      this,\n    );\n    (this: any).flushedQueue = this.flushedQueue.bind(this);\n    (this: any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(\n      this,\n    );\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(module: string, method: string, args: any[]) {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  callFunctionReturnResultAndFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ) {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  }\n\n  invokeCallbackAndReturnFlushedQueue(cbID: number, args: any[]) {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue() {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime() {\n    return new Date().getTime() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      // eslint-disable-next-line no-bitwise\n      onFail && params.push(this._callID << 1);\n      // eslint-disable-next-line no-bitwise\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Validate that parameters passed over the bridge are\n      // folly-convertible.  As a special case, if a prop value is a\n      // function it is permitted here, and special-cased in the\n      // conversion.\n      const isValidArgument = val => {\n        const t = typeof val;\n        if (\n          t === 'undefined' ||\n          t === 'null' ||\n          t === 'boolean' ||\n          t === 'number' ||\n          t === 'string'\n        ) {\n          return true;\n        }\n        if (t === 'function' || t !== 'object') {\n          return false;\n        }\n        if (Array.isArray(val)) {\n          return val.every(isValidArgument);\n        }\n        for (const k in val) {\n          if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n            return false;\n          }\n        }\n        return true;\n      };\n\n      invariant(\n        isValidArgument(params),\n        '%s is not usable as a native method argument',\n        params,\n      );\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = new Date().getTime();\n    if (\n      global.nativeFlushQueueImmediate &&\n      (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS ||\n        this._inCall === 0)\n    ) {\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: this._remoteModuleTable[moduleID],\n        method: this._remoteMethodTable[moduleID][methodID],\n        args: params,\n      });\n    } else if (this.__spy) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: moduleID + '',\n        method: methodID,\n        args: params,\n      });\n    }\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: string[]) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  uninstallGlobalErrorHandler() {\n    this.__guard = this.__guardUnsafe;\n  }\n\n  installGlobalErrorHandler() {\n    this.__guard = this.__guardSafe;\n  }\n\n  /**\n   * Private methods\n   */\n\n  // Lets exceptions propagate to be handled by the VM at the origin\n  __guardUnsafe(fn: () => void) {\n    this._inCall++;\n    fn();\n    this._inCall--;\n  }\n\n  __guardSafe(fn: () => void) {\n    this._inCall++;\n    try {\n      fn();\n    } catch (error) {\n      ErrorUtils.reportFatalError(error);\n    } finally {\n      this._inCall--;\n    }\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (!JSTimers) {\n      JSTimers = require('JSTimers');\n    }\n    JSTimers.callImmediates();\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: any[]): any {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n    Systrace.beginEvent(`${module}.${method}()`);\n    if (this.__spy) {\n      this.__spy({type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: any[]) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    // eslint-disable-next-line no-bitwise\n    const callID = cbID >>> 1;\n    // eslint-disable-next-line no-bitwise\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks[callID]\n      : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage =\n            `The callback ${method}() exists in module ${module}, ` +\n            'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(callback, errorMessage);\n      }\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID;\n      if (callback && this.__spy) {\n        this.__spy({type: TO_JS, module: null, method: profileName, args});\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks[callID] = this._failureCallbacks[callID] = null;\n    callback(...args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}