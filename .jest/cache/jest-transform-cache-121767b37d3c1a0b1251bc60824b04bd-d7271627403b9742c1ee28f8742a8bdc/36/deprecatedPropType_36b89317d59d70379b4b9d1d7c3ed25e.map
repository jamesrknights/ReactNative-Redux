{"version":3,"sources":["deprecatedPropType.js"],"names":["UIManager","require","deprecatedPropType","propType","explanation","validate","props","propName","componentName","undefined","console","warn","rest","module","exports"],"mappings":";AASA;;AAEA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AAKA,SAASC,kBAAT,CACEC,QADF,EAEEC,WAFF,EAGuB;AACrB,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAA2D;AAEhE,QAAI,CAACR,UAAUQ,aAAV,CAAD,IAA6BF,MAAMC,QAAN,MAAoBE,SAArD,EAAgE;AAC9DC,cAAQC,IAAR,OAAkBJ,QAAlB,uBAA8CC,aAA9C,+BAAsFJ,WAAtF;AACD;;AAJ+D,sCAANQ,IAAM;AAANA,UAAM;AAAA;;AAMhE,WAAOT,2BACLG,KADK,EAELC,QAFK,EAGLC,aAHK,SAIFI,IAJE,EAAP;AAMD,GAZD;AAaD;;AAEDC,OAAOC,OAAP,GAAiBZ,kBAAjB","file":"deprecatedPropType.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule deprecatedPropType\n * @flow\n */\n'use strict';\n\nconst UIManager = require('UIManager');\n\n/**\n * Adds a deprecation warning when the prop is used.\n */\nfunction deprecatedPropType(\n  propType: ReactPropsCheckType,\n  explanation: string\n): ReactPropsCheckType {\n  return function validate(props, propName, componentName, ...rest) {\n    // Don't warn for native components.\n    if (!UIManager[componentName] && props[propName] !== undefined) {\n      console.warn(`\\`${propName}\\` supplied to \\`${componentName}\\` has been deprecated. ${explanation}`);\n    }\n\n    return propType(\n      props,\n      propName,\n      componentName,\n      ...rest\n    );\n  };\n}\n\nmodule.exports = deprecatedPropType;\n"]}