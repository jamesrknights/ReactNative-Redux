{"version":3,"sources":["Text.js"],"names":["NativeMethodsMixin","require","React","ReactNativeViewAttributes","TextPropTypes","Touchable","UIManager","createReactClass","createReactNativeComponentClass","mergeFast","processColor","ViewContextTypes","viewConfig","validAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","uiViewClassName","Text","displayName","propTypes","getDefaultProps","accessible","getInitialState","Mixin","touchableGetInitialState","mixins","getChildContext","isInAParentText","childContextTypes","contextTypes","_handlers","_hasPressHandler","props","onPress","onLongPress","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","touchableGetPressRectOffset","render","newProps","onStartShouldSetResponder","shouldSetFromProps","setResponder","key","bind","suppressHighlighting","setState","e","pressRetentionOffset","PRESS_RECT_OFFSET","onResponderGrant","dispatchID","touchableHandleResponderGrant","apply","arguments","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","allowTermination","touchableHandleResponderTerminationRequest","state","TOUCH_TARGET_DEBUG","style","color","context","top","left","right","bottom","RCTText","RCTVirtualText","module","exports"],"mappings":"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","file":"Text.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule Text\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst React = require('React');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nconst TextPropTypes = require('TextPropTypes');\nconst Touchable = require('Touchable');\nconst UIManager = require('UIManager');\n\nconst createReactClass = require('create-react-class');\nconst createReactNativeComponentClass = require('createReactNativeComponentClass');\nconst mergeFast = require('mergeFast');\nconst processColor = require('processColor');\nconst {ViewContextTypes} = require('ViewContext');\n\nconst viewConfig = {\n  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {\n    isHighlighted: true,\n    numberOfLines: true,\n    ellipsizeMode: true,\n    allowFontScaling: true,\n    disabled: true,\n    selectable: true,\n    selectionColor: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    textBreakStrategy: true,\n  }),\n  uiViewClassName: 'RCTText',\n};\n\nimport type {ViewChildContext} from 'ViewContext';\n\n/**\n * A React component for displaying text.\n *\n * See https://facebook.github.io/react-native/docs/text.html\n */\n\nconst Text = createReactClass({\n  displayName: 'Text',\n  propTypes: TextPropTypes,\n  getDefaultProps(): Object {\n    return {\n      accessible: true,\n      allowFontScaling: true,\n      ellipsizeMode: 'tail',\n    };\n  },\n  getInitialState: function(): Object {\n    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {\n      isHighlighted: false,\n    });\n  },\n  mixins: [NativeMethodsMixin],\n  viewConfig: viewConfig,\n  getChildContext(): ViewChildContext {\n    return {\n      isInAParentText: true,\n    };\n  },\n  childContextTypes: ViewContextTypes,\n  contextTypes: ViewContextTypes,\n  /**\n   * Only assigned if touch is needed.\n   */\n  _handlers: (null: ?Object),\n  _hasPressHandler(): boolean {\n    return !!this.props.onPress || !!this.props.onLongPress;\n  },\n  /**\n   * These are assigned lazily the first time the responder is set to make plain\n   * text nodes as cheap as possible.\n   */\n  touchableHandleActivePressIn: (null: ?Function),\n  touchableHandleActivePressOut: (null: ?Function),\n  touchableHandlePress: (null: ?Function),\n  touchableHandleLongPress: (null: ?Function),\n  touchableGetPressRectOffset: (null: ?Function),\n  render(): React.Element<any> {\n    let newProps = this.props;\n    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {\n      if (!this._handlers) {\n        this._handlers = {\n          onStartShouldSetResponder: (): boolean => {\n            const shouldSetFromProps =\n              this.props.onStartShouldSetResponder &&\n              // $FlowFixMe(>=0.41.0)\n              this.props.onStartShouldSetResponder();\n            const setResponder = shouldSetFromProps || this._hasPressHandler();\n            if (setResponder && !this.touchableHandleActivePressIn) {\n              // Attach and bind all the other handlers only the first time a touch\n              // actually happens.\n              for (const key in Touchable.Mixin) {\n                if (typeof Touchable.Mixin[key] === 'function') {\n                  (this: any)[key] = Touchable.Mixin[key].bind(this);\n                }\n              }\n              this.touchableHandleActivePressIn = () => {\n                if (\n                  this.props.suppressHighlighting ||\n                  !this._hasPressHandler()\n                ) {\n                  return;\n                }\n                this.setState({\n                  isHighlighted: true,\n                });\n              };\n\n              this.touchableHandleActivePressOut = () => {\n                if (\n                  this.props.suppressHighlighting ||\n                  !this._hasPressHandler()\n                ) {\n                  return;\n                }\n                this.setState({\n                  isHighlighted: false,\n                });\n              };\n\n              this.touchableHandlePress = (e: SyntheticEvent<>) => {\n                this.props.onPress && this.props.onPress(e);\n              };\n\n              this.touchableHandleLongPress = (e: SyntheticEvent<>) => {\n                this.props.onLongPress && this.props.onLongPress(e);\n              };\n\n              this.touchableGetPressRectOffset = function(): RectOffset {\n                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;\n              };\n            }\n            return setResponder;\n          },\n          onResponderGrant: function(e: SyntheticEvent<>, dispatchID: string) {\n            this.touchableHandleResponderGrant(e, dispatchID);\n            this.props.onResponderGrant &&\n              this.props.onResponderGrant.apply(this, arguments);\n          }.bind(this),\n          onResponderMove: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderMove(e);\n            this.props.onResponderMove &&\n              this.props.onResponderMove.apply(this, arguments);\n          }.bind(this),\n          onResponderRelease: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderRelease(e);\n            this.props.onResponderRelease &&\n              this.props.onResponderRelease.apply(this, arguments);\n          }.bind(this),\n          onResponderTerminate: function(e: SyntheticEvent<>) {\n            this.touchableHandleResponderTerminate(e);\n            this.props.onResponderTerminate &&\n              this.props.onResponderTerminate.apply(this, arguments);\n          }.bind(this),\n          onResponderTerminationRequest: function(): boolean {\n            // Allow touchable or props.onResponderTerminationRequest to deny\n            // the request\n            var allowTermination = this.touchableHandleResponderTerminationRequest();\n            if (allowTermination && this.props.onResponderTerminationRequest) {\n              allowTermination = this.props.onResponderTerminationRequest.apply(\n                this,\n                arguments,\n              );\n            }\n            return allowTermination;\n          }.bind(this),\n        };\n      }\n      newProps = {\n        ...this.props,\n        ...this._handlers,\n        isHighlighted: this.state.isHighlighted,\n      };\n    }\n    if (newProps.selectionColor != null) {\n      newProps = {\n        ...newProps,\n        selectionColor: processColor(newProps.selectionColor),\n      };\n    }\n    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {\n      newProps = {\n        ...newProps,\n        style: [this.props.style, {color: 'magenta'}],\n      };\n    }\n    if (this.context.isInAParentText) {\n      return <RCTVirtualText {...newProps} />;\n    } else {\n      return <RCTText {...newProps} />;\n    }\n  },\n});\n\ntype RectOffset = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n};\n\nvar PRESS_RECT_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nvar RCTText = createReactNativeComponentClass(\n  viewConfig.uiViewClassName,\n  () => viewConfig,\n);\nvar RCTVirtualText = RCTText;\n\nif (UIManager.RCTVirtualText) {\n  RCTVirtualText = createReactNativeComponentClass('RCTVirtualText', () => ({\n    validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {\n      isHighlighted: true,\n    }),\n    uiViewClassName: 'RCTVirtualText',\n  }));\n}\n\nmodule.exports = Text;\n"]}