{"version":3,"sources":["SpringConfig.js"],"names":["stiffnessFromOrigamiValue","oValue","dampingFromOrigamiValue","fromOrigamiTensionAndFriction","tension","friction","stiffness","damping","fromBouncinessAndSpeed","bounciness","speed","normalize","value","startValue","endValue","projectNormal","n","start","end","linearInterpolation","t","quadraticOutInterpolation","b3Friction1","x","Math","pow","b3Friction2","b3Friction3","b3Nobounce","b","s","bouncyTension","bouncyFriction","module","exports"],"mappings":";;AAUA;;AAOA,SAASA,yBAAT,CAAmCC,MAAnC,EAA2C;AACzC,SAAO,CAACA,SAAS,EAAV,IAAgB,IAAhB,GAAuB,GAA9B;AACD;;AAED,SAASC,uBAAT,CAAiCD,MAAjC,EAAyC;AACvC,SAAO,CAACA,SAAS,CAAV,IAAe,CAAf,GAAmB,EAA1B;AACD;;AAED,SAASE,6BAAT,CACEC,OADF,EAEEC,QAFF,EAGoB;AAClB,SAAO;AACLC,eAAWN,0BAA0BI,OAA1B,CADN;AAELG,aAASL,wBAAwBG,QAAxB;AAFJ,GAAP;AAID;;AAED,SAASG,sBAAT,CACEC,UADF,EAEEC,KAFF,EAGoB;AAClB,WAASC,SAAT,CAAmBC,KAAnB,EAA0BC,UAA1B,EAAsCC,QAAtC,EAAgD;AAC9C,WAAO,CAACF,QAAQC,UAAT,KAAwBC,WAAWD,UAAnC,CAAP;AACD;;AAED,WAASE,aAAT,CAAuBC,CAAvB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,WAAOD,QAASD,KAAKE,MAAMD,KAAX,CAAhB;AACD;;AAED,WAASE,mBAAT,CAA6BC,CAA7B,EAAgCH,KAAhC,EAAuCC,GAAvC,EAA4C;AAC1C,WAAOE,IAAIF,GAAJ,GAAU,CAAC,IAAIE,CAAL,IAAUH,KAA3B;AACD;;AAED,WAASI,yBAAT,CAAmCD,CAAnC,EAAsCH,KAAtC,EAA6CC,GAA7C,EAAkD;AAChD,WAAOC,oBAAoB,IAAIC,CAAJ,GAAQA,IAAIA,CAAhC,EAAmCH,KAAnC,EAA0CC,GAA1C,CAAP;AACD;;AAED,WAASI,WAAT,CAAqBC,CAArB,EAAwB;AACtB,WAAQ,SAASC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CAAV,GACJ,QAAQC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CADJ,GACsB,OAAOA,CAD7B,GACiC,IADxC;AAED;;AAED,WAASG,WAAT,CAAqBH,CAArB,EAAwB;AACtB,WAAQ,WAAWC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CAAZ,GACJ,QAAQC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CADJ,GACsB,OAAOA,CAD7B,GACiC,CADxC;AAED;;AAED,WAASI,WAAT,CAAqBJ,CAArB,EAAwB;AACtB,WAAQ,aAAaC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CAAd,GACJ,WAAWC,KAAKC,GAAL,CAASF,CAAT,EAAY,CAAZ,CADP,GACyB,SAASA,CADlC,GACsC,IAD7C;AAED;;AAED,WAASK,UAAT,CAAoBxB,OAApB,EAA6B;AAC3B,QAAIA,WAAW,EAAf,EAAmB;AACjB,aAAOkB,YAAYlB,OAAZ,CAAP;AACD,KAFD,MAEO,IAAIA,UAAU,EAAV,IAAgBA,WAAW,EAA/B,EAAmC;AACxC,aAAOsB,YAAYtB,OAAZ,CAAP;AACD,KAFM,MAEA;AACL,aAAOuB,YAAYvB,OAAZ,CAAP;AACD;AACF;;AAED,MAAIyB,IAAIlB,UAAUF,aAAa,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,CAAR;AACAoB,MAAId,cAAcc,CAAd,EAAiB,CAAjB,EAAoB,GAApB,CAAJ;AACA,MAAIC,IAAInB,UAAUD,QAAQ,GAAlB,EAAuB,CAAvB,EAA0B,EAA1B,CAAR;AACA,MAAIqB,gBAAgBhB,cAAce,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAApB;AACA,MAAIE,iBAAiBX,0BACnBQ,CADmB,EAEnBD,WAAWG,aAAX,CAFmB,EAGnB,IAHmB,CAArB;;AAMA,SAAO;AACLzB,eAAWN,0BAA0B+B,aAA1B,CADN;AAELxB,aAASL,wBAAwB8B,cAAxB;AAFJ,GAAP;AAID;;AAEDC,OAAOC,OAAP,GAAiB;AACf/B,8DADe;AAEfK;AAFe,CAAjB","file":"SpringConfig.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SpringConfig\n * @flow\n */\n\n'use strict';\n\ntype SpringConfigType = {\n  stiffness: number,\n  damping: number,\n};\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction fromOrigamiTensionAndFriction(\n  tension: number,\n  friction: number,\n): SpringConfigType {\n  return {\n    stiffness: stiffnessFromOrigamiValue(tension),\n    damping: dampingFromOrigamiValue(friction),\n  };\n}\n\nfunction fromBouncinessAndSpeed(\n  bounciness: number,\n  speed: number,\n): SpringConfigType {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + (n * (end - start));\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return (0.0007 * Math.pow(x, 3)) -\n      (0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return (0.000044 * Math.pow(x, 3)) -\n      (0.006 * Math.pow(x, 2)) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return (0.00000045 * Math.pow(x, 3)) -\n      (0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  var b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  var s = normalize(speed / 1.7, 0, 20);\n  var bouncyTension = projectNormal(s, 0.5, 200);\n  var bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n\n  return {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction),\n  };\n}\n\nmodule.exports = {\n  fromOrigamiTensionAndFriction,\n  fromBouncinessAndSpeed,\n};\n"]}