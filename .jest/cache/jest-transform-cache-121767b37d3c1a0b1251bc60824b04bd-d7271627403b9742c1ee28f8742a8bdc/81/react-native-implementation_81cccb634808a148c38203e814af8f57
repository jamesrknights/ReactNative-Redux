4fd9d04021e21ecf16e4230c748d992f

'use strict';

var invariant = require('fbjs/lib/invariant');

var ReactNative = {
  get AccessibilityInfo() {
    return require('AccessibilityInfo');
  },
  get ActivityIndicator() {
    return require('ActivityIndicator');
  },
  get ART() {
    return require('ReactNativeART');
  },
  get Button() {
    return require('Button');
  },
  get CheckBox() {
    return require('CheckBox');
  },
  get DatePickerIOS() {
    return require('DatePickerIOS');
  },
  get DrawerLayoutAndroid() {
    return require('DrawerLayoutAndroid');
  },
  get FlatList() {
    return require('FlatList');
  },
  get Image() {
    return require('Image');
  },
  get ImageBackground() {
    return require('ImageBackground');
  },
  get ImageEditor() {
    return require('ImageEditor');
  },
  get ImageStore() {
    return require('ImageStore');
  },
  get KeyboardAvoidingView() {
    return require('KeyboardAvoidingView');
  },
  get ListView() {
    return require('ListView');
  },
  get MaskedViewIOS() {
    return require('MaskedViewIOS');
  },
  get Modal() {
    return require('Modal');
  },
  get NavigatorIOS() {
    return require('NavigatorIOS');
  },
  get Picker() {
    return require('Picker');
  },
  get PickerIOS() {
    return require('PickerIOS');
  },
  get ProgressBarAndroid() {
    return require('ProgressBarAndroid');
  },
  get ProgressViewIOS() {
    return require('ProgressViewIOS');
  },
  get SafeAreaView() {
    return require('SafeAreaView');
  },
  get ScrollView() {
    return require('ScrollView');
  },
  get SectionList() {
    return require('SectionList');
  },
  get SegmentedControlIOS() {
    return require('SegmentedControlIOS');
  },
  get Slider() {
    return require('Slider');
  },
  get SnapshotViewIOS() {
    return require('SnapshotViewIOS');
  },
  get Switch() {
    return require('Switch');
  },
  get RefreshControl() {
    return require('RefreshControl');
  },
  get StatusBar() {
    return require('StatusBar');
  },
  get SwipeableFlatList() {
    return require('SwipeableFlatList');
  },
  get SwipeableListView() {
    return require('SwipeableListView');
  },
  get TabBarIOS() {
    return require('TabBarIOS');
  },
  get Text() {
    return require('Text');
  },
  get TextInput() {
    return require('TextInput');
  },
  get ToastAndroid() {
    return require('ToastAndroid');
  },
  get ToolbarAndroid() {
    return require('ToolbarAndroid');
  },
  get Touchable() {
    return require('Touchable');
  },
  get TouchableHighlight() {
    return require('TouchableHighlight');
  },
  get TouchableNativeFeedback() {
    return require('TouchableNativeFeedback');
  },
  get TouchableOpacity() {
    return require('TouchableOpacity');
  },
  get TouchableWithoutFeedback() {
    return require('TouchableWithoutFeedback');
  },
  get View() {
    return require('View');
  },
  get ViewPagerAndroid() {
    return require('ViewPagerAndroid');
  },
  get VirtualizedList() {
    return require('VirtualizedList');
  },
  get WebView() {
    return require('WebView');
  },

  get ActionSheetIOS() {
    return require('ActionSheetIOS');
  },
  get Alert() {
    return require('Alert');
  },
  get AlertIOS() {
    return require('AlertIOS');
  },
  get Animated() {
    return require('Animated');
  },
  get AppRegistry() {
    return require('AppRegistry');
  },
  get AppState() {
    return require('AppState');
  },
  get AsyncStorage() {
    return require('AsyncStorage');
  },
  get BackAndroid() {
    return require('BackAndroid');
  },
  get BackHandler() {
    return require('BackHandler');
  },
  get CameraRoll() {
    return require('CameraRoll');
  },
  get Clipboard() {
    return require('Clipboard');
  },
  get DatePickerAndroid() {
    return require('DatePickerAndroid');
  },
  get DeviceInfo() {
    return require('DeviceInfo');
  },
  get Dimensions() {
    return require('Dimensions');
  },
  get Easing() {
    return require('Easing');
  },
  get findNodeHandle() {
    return require('ReactNative').findNodeHandle;
  },
  get I18nManager() {
    return require('I18nManager');
  },
  get ImagePickerIOS() {
    return require('ImagePickerIOS');
  },
  get InteractionManager() {
    return require('InteractionManager');
  },
  get Keyboard() {
    return require('Keyboard');
  },
  get LayoutAnimation() {
    return require('LayoutAnimation');
  },
  get Linking() {
    return require('Linking');
  },
  get NativeEventEmitter() {
    return require('NativeEventEmitter');
  },
  get NetInfo() {
    return require('NetInfo');
  },
  get PanResponder() {
    return require('PanResponder');
  },
  get PermissionsAndroid() {
    return require('PermissionsAndroid');
  },
  get PixelRatio() {
    return require('PixelRatio');
  },
  get PushNotificationIOS() {
    return require('PushNotificationIOS');
  },
  get Settings() {
    return require('Settings');
  },
  get Share() {
    return require('Share');
  },
  get StatusBarIOS() {
    return require('StatusBarIOS');
  },
  get StyleSheet() {
    return require('StyleSheet');
  },
  get Systrace() {
    return require('Systrace');
  },
  get TimePickerAndroid() {
    return require('TimePickerAndroid');
  },
  get TVEventHandler() {
    return require('TVEventHandler');
  },
  get UIManager() {
    return require('UIManager');
  },
  get unstable_batchedUpdates() {
    return require('ReactNative').unstable_batchedUpdates;
  },
  get Vibration() {
    return require('Vibration');
  },
  get VibrationIOS() {
    return require('VibrationIOS');
  },
  get YellowBox() {
    return require('YellowBox');
  },

  get DeviceEventEmitter() {
    return require('RCTDeviceEventEmitter');
  },
  get NativeAppEventEmitter() {
    return require('RCTNativeAppEventEmitter');
  },
  get NativeModules() {
    return require('NativeModules');
  },
  get Platform() {
    return require('Platform');
  },
  get processColor() {
    return require('processColor');
  },
  get requireNativeComponent() {
    return require('requireNativeComponent');
  },
  get takeSnapshot() {
    return require('takeSnapshot');
  },

  get ColorPropType() {
    return require('ColorPropType');
  },
  get EdgeInsetsPropType() {
    return require('EdgeInsetsPropType');
  },
  get PointPropType() {
    return require('PointPropType');
  },
  get ViewPropTypes() {
    return require('ViewPropTypes');
  },

  get Navigator() {
    invariant(false, 'Navigator is deprecated and has been removed from this package. It can now be installed ' + 'and imported from `react-native-deprecated-custom-components` instead of `react-native`. ' + 'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');
  }
};

module.exports = ReactNative;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LW5hdGl2ZS1pbXBsZW1lbnRhdGlvbi5qcyJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJyZXF1aXJlIiwiUmVhY3ROYXRpdmUiLCJBY2Nlc3NpYmlsaXR5SW5mbyIsIkFjdGl2aXR5SW5kaWNhdG9yIiwiQVJUIiwiQnV0dG9uIiwiQ2hlY2tCb3giLCJEYXRlUGlja2VySU9TIiwiRHJhd2VyTGF5b3V0QW5kcm9pZCIsIkZsYXRMaXN0IiwiSW1hZ2UiLCJJbWFnZUJhY2tncm91bmQiLCJJbWFnZUVkaXRvciIsIkltYWdlU3RvcmUiLCJLZXlib2FyZEF2b2lkaW5nVmlldyIsIkxpc3RWaWV3IiwiTWFza2VkVmlld0lPUyIsIk1vZGFsIiwiTmF2aWdhdG9ySU9TIiwiUGlja2VyIiwiUGlja2VySU9TIiwiUHJvZ3Jlc3NCYXJBbmRyb2lkIiwiUHJvZ3Jlc3NWaWV3SU9TIiwiU2FmZUFyZWFWaWV3IiwiU2Nyb2xsVmlldyIsIlNlY3Rpb25MaXN0IiwiU2VnbWVudGVkQ29udHJvbElPUyIsIlNsaWRlciIsIlNuYXBzaG90Vmlld0lPUyIsIlN3aXRjaCIsIlJlZnJlc2hDb250cm9sIiwiU3RhdHVzQmFyIiwiU3dpcGVhYmxlRmxhdExpc3QiLCJTd2lwZWFibGVMaXN0VmlldyIsIlRhYkJhcklPUyIsIlRleHQiLCJUZXh0SW5wdXQiLCJUb2FzdEFuZHJvaWQiLCJUb29sYmFyQW5kcm9pZCIsIlRvdWNoYWJsZSIsIlRvdWNoYWJsZUhpZ2hsaWdodCIsIlRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrIiwiVG91Y2hhYmxlT3BhY2l0eSIsIlRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayIsIlZpZXciLCJWaWV3UGFnZXJBbmRyb2lkIiwiVmlydHVhbGl6ZWRMaXN0IiwiV2ViVmlldyIsIkFjdGlvblNoZWV0SU9TIiwiQWxlcnQiLCJBbGVydElPUyIsIkFuaW1hdGVkIiwiQXBwUmVnaXN0cnkiLCJBcHBTdGF0ZSIsIkFzeW5jU3RvcmFnZSIsIkJhY2tBbmRyb2lkIiwiQmFja0hhbmRsZXIiLCJDYW1lcmFSb2xsIiwiQ2xpcGJvYXJkIiwiRGF0ZVBpY2tlckFuZHJvaWQiLCJEZXZpY2VJbmZvIiwiRGltZW5zaW9ucyIsIkVhc2luZyIsImZpbmROb2RlSGFuZGxlIiwiSTE4bk1hbmFnZXIiLCJJbWFnZVBpY2tlcklPUyIsIkludGVyYWN0aW9uTWFuYWdlciIsIktleWJvYXJkIiwiTGF5b3V0QW5pbWF0aW9uIiwiTGlua2luZyIsIk5hdGl2ZUV2ZW50RW1pdHRlciIsIk5ldEluZm8iLCJQYW5SZXNwb25kZXIiLCJQZXJtaXNzaW9uc0FuZHJvaWQiLCJQaXhlbFJhdGlvIiwiUHVzaE5vdGlmaWNhdGlvbklPUyIsIlNldHRpbmdzIiwiU2hhcmUiLCJTdGF0dXNCYXJJT1MiLCJTdHlsZVNoZWV0IiwiU3lzdHJhY2UiLCJUaW1lUGlja2VyQW5kcm9pZCIsIlRWRXZlbnRIYW5kbGVyIiwiVUlNYW5hZ2VyIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJWaWJyYXRpb24iLCJWaWJyYXRpb25JT1MiLCJZZWxsb3dCb3giLCJEZXZpY2VFdmVudEVtaXR0ZXIiLCJOYXRpdmVBcHBFdmVudEVtaXR0ZXIiLCJOYXRpdmVNb2R1bGVzIiwiUGxhdGZvcm0iLCJwcm9jZXNzQ29sb3IiLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwidGFrZVNuYXBzaG90IiwiQ29sb3JQcm9wVHlwZSIsIkVkZ2VJbnNldHNQcm9wVHlwZSIsIlBvaW50UHJvcFR5cGUiLCJWaWV3UHJvcFR5cGVzIiwiTmF2aWdhdG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjtBQVNBOztBQUVBLElBQU1BLFlBQVlDLFFBQVEsb0JBQVIsQ0FBbEI7O0FBR0EsSUFBTUMsY0FBYztBQUVsQixNQUFJQyxpQkFBSixHQUF3QjtBQUFFLFdBQU9GLFFBQVEsbUJBQVIsQ0FBUDtBQUFzQyxHQUY5QztBQUdsQixNQUFJRyxpQkFBSixHQUF3QjtBQUFFLFdBQU9ILFFBQVEsbUJBQVIsQ0FBUDtBQUFzQyxHQUg5QztBQUls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ZSI6InJlYWN0LW5hdGl2ZS1pbXBsZW1lbnRhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIHJlYWN0LW5hdGl2ZS1pbXBsZW1lbnRhdGlvblxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcblxuLy8gRXhwb3J0IFJlYWN0LCBwbHVzIHNvbWUgbmF0aXZlIGFkZGl0aW9ucy5cbmNvbnN0IFJlYWN0TmF0aXZlID0ge1xuICAvLyBDb21wb25lbnRzXG4gIGdldCBBY2Nlc3NpYmlsaXR5SW5mbygpIHsgcmV0dXJuIHJlcXVpcmUoJ0FjY2Vzc2liaWxpdHlJbmZvJyk7IH0sXG4gIGdldCBBY3Rpdml0eUluZGljYXRvcigpIHsgcmV0dXJuIHJlcXVpcmUoJ0FjdGl2aXR5SW5kaWNhdG9yJyk7IH0sXG4gIGdldCBBUlQoKSB7IHJldHVybiByZXF1aXJlKCdSZWFjdE5hdGl2ZUFSVCcpOyB9LFxuICBnZXQgQnV0dG9uKCkgeyByZXR1cm4gcmVxdWlyZSgnQnV0dG9uJyk7IH0sXG4gIGdldCBDaGVja0JveCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0NoZWNrQm94Jyk7IH0sXG4gIGdldCBEYXRlUGlja2VySU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnRGF0ZVBpY2tlcklPUycpOyB9LFxuICBnZXQgRHJhd2VyTGF5b3V0QW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0RyYXdlckxheW91dEFuZHJvaWQnKTsgfSxcbiAgZ2V0IEZsYXRMaXN0KCkgeyByZXR1cm4gcmVxdWlyZSgnRmxhdExpc3QnKTsgfSxcbiAgZ2V0IEltYWdlKCkgeyByZXR1cm4gcmVxdWlyZSgnSW1hZ2UnKTsgfSxcbiAgZ2V0IEltYWdlQmFja2dyb3VuZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0ltYWdlQmFja2dyb3VuZCcpOyB9LFxuICBnZXQgSW1hZ2VFZGl0b3IoKSB7IHJldHVybiByZXF1aXJlKCdJbWFnZUVkaXRvcicpOyB9LFxuICBnZXQgSW1hZ2VTdG9yZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0ltYWdlU3RvcmUnKTsgfSxcbiAgZ2V0IEtleWJvYXJkQXZvaWRpbmdWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnS2V5Ym9hcmRBdm9pZGluZ1ZpZXcnKTsgfSxcbiAgZ2V0IExpc3RWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnTGlzdFZpZXcnKTsgfSxcbiAgZ2V0IE1hc2tlZFZpZXdJT1MoKSB7IHJldHVybiByZXF1aXJlKCdNYXNrZWRWaWV3SU9TJyk7IH0sXG4gIGdldCBNb2RhbCgpIHsgcmV0dXJuIHJlcXVpcmUoJ01vZGFsJyk7IH0sXG4gIGdldCBOYXZpZ2F0b3JJT1MoKSB7IHJldHVybiByZXF1aXJlKCdOYXZpZ2F0b3JJT1MnKTsgfSxcbiAgZ2V0IFBpY2tlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1BpY2tlcicpOyB9LFxuICBnZXQgUGlja2VySU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnUGlja2VySU9TJyk7IH0sXG4gIGdldCBQcm9ncmVzc0JhckFuZHJvaWQoKSB7IHJldHVybiByZXF1aXJlKCdQcm9ncmVzc0JhckFuZHJvaWQnKTsgfSxcbiAgZ2V0IFByb2dyZXNzVmlld0lPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1Byb2dyZXNzVmlld0lPUycpOyB9LFxuICBnZXQgU2FmZUFyZWFWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnU2FmZUFyZWFWaWV3Jyk7IH0sXG4gIGdldCBTY3JvbGxWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnU2Nyb2xsVmlldycpOyB9LFxuICBnZXQgU2VjdGlvbkxpc3QoKSB7IHJldHVybiByZXF1aXJlKCdTZWN0aW9uTGlzdCcpOyB9LFxuICBnZXQgU2VnbWVudGVkQ29udHJvbElPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1NlZ21lbnRlZENvbnRyb2xJT1MnKTsgfSxcbiAgZ2V0IFNsaWRlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1NsaWRlcicpOyB9LFxuICBnZXQgU25hcHNob3RWaWV3SU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnU25hcHNob3RWaWV3SU9TJyk7IH0sXG4gIGdldCBTd2l0Y2goKSB7IHJldHVybiByZXF1aXJlKCdTd2l0Y2gnKTsgfSxcbiAgZ2V0IFJlZnJlc2hDb250cm9sKCkgeyByZXR1cm4gcmVxdWlyZSgnUmVmcmVzaENvbnRyb2wnKTsgfSxcbiAgZ2V0IFN0YXR1c0JhcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1N0YXR1c0JhcicpOyB9LFxuICBnZXQgU3dpcGVhYmxlRmxhdExpc3QoKSB7IHJldHVybiByZXF1aXJlKCdTd2lwZWFibGVGbGF0TGlzdCcpOyB9LFxuICBnZXQgU3dpcGVhYmxlTGlzdFZpZXcoKSB7IHJldHVybiByZXF1aXJlKCdTd2lwZWFibGVMaXN0VmlldycpOyB9LFxuICBnZXQgVGFiQmFySU9TKCkgeyByZXR1cm4gcmVxdWlyZSgnVGFiQmFySU9TJyk7IH0sXG4gIGdldCBUZXh0KCkgeyByZXR1cm4gcmVxdWlyZSgnVGV4dCcpOyB9LFxuICBnZXQgVGV4dElucHV0KCkgeyByZXR1cm4gcmVxdWlyZSgnVGV4dElucHV0Jyk7IH0sXG4gIGdldCBUb2FzdEFuZHJvaWQoKSB7IHJldHVybiByZXF1aXJlKCdUb2FzdEFuZHJvaWQnKTsgfSxcbiAgZ2V0IFRvb2xiYXJBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnVG9vbGJhckFuZHJvaWQnKTsgfSxcbiAgZ2V0IFRvdWNoYWJsZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1RvdWNoYWJsZScpOyB9LFxuICBnZXQgVG91Y2hhYmxlSGlnaGxpZ2h0KCkgeyByZXR1cm4gcmVxdWlyZSgnVG91Y2hhYmxlSGlnaGxpZ2h0Jyk7IH0sXG4gIGdldCBUb3VjaGFibGVOYXRpdmVGZWVkYmFjaygpIHsgcmV0dXJuIHJlcXVpcmUoJ1RvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrJyk7IH0sXG4gIGdldCBUb3VjaGFibGVPcGFjaXR5KCkgeyByZXR1cm4gcmVxdWlyZSgnVG91Y2hhYmxlT3BhY2l0eScpOyB9LFxuICBnZXQgVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrKCkgeyByZXR1cm4gcmVxdWlyZSgnVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrJyk7IH0sXG4gIGdldCBWaWV3KCkgeyByZXR1cm4gcmVxdWlyZSgnVmlldycpOyB9LFxuICBnZXQgVmlld1BhZ2VyQW5kcm9pZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1ZpZXdQYWdlckFuZHJvaWQnKTsgfSxcbiAgZ2V0IFZpcnR1YWxpemVkTGlzdCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1ZpcnR1YWxpemVkTGlzdCcpOyB9LFxuICBnZXQgV2ViVmlldygpIHsgcmV0dXJuIHJlcXVpcmUoJ1dlYlZpZXcnKTsgfSxcblxuICAvLyBBUElzXG4gIGdldCBBY3Rpb25TaGVldElPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ0FjdGlvblNoZWV0SU9TJyk7IH0sXG4gIGdldCBBbGVydCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0FsZXJ0Jyk7IH0sXG4gIGdldCBBbGVydElPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ0FsZXJ0SU9TJyk7IH0sXG4gIGdldCBBbmltYXRlZCgpIHsgcmV0dXJuIHJlcXVpcmUoJ0FuaW1hdGVkJyk7IH0sXG4gIGdldCBBcHBSZWdpc3RyeSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0FwcFJlZ2lzdHJ5Jyk7IH0sXG4gIGdldCBBcHBTdGF0ZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0FwcFN0YXRlJyk7IH0sXG4gIGdldCBBc3luY1N0b3JhZ2UoKSB7IHJldHVybiByZXF1aXJlKCdBc3luY1N0b3JhZ2UnKTsgfSxcbiAgZ2V0IEJhY2tBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnQmFja0FuZHJvaWQnKTsgfSwgLy8gZGVwcmVjYXRlZDogdXNlIEJhY2tIYW5kbGVyIGluc3RlYWRcbiAgZ2V0IEJhY2tIYW5kbGVyKCkgeyByZXR1cm4gcmVxdWlyZSgnQmFja0hhbmRsZXInKTsgfSxcbiAgZ2V0IENhbWVyYVJvbGwoKSB7IHJldHVybiByZXF1aXJlKCdDYW1lcmFSb2xsJyk7IH0sXG4gIGdldCBDbGlwYm9hcmQoKSB7IHJldHVybiByZXF1aXJlKCdDbGlwYm9hcmQnKTsgfSxcbiAgZ2V0IERhdGVQaWNrZXJBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnRGF0ZVBpY2tlckFuZHJvaWQnKTsgfSxcbiAgZ2V0IERldmljZUluZm8oKSB7IHJldHVybiByZXF1aXJlKCdEZXZpY2VJbmZvJyk7IH0sXG4gIGdldCBEaW1lbnNpb25zKCkgeyByZXR1cm4gcmVxdWlyZSgnRGltZW5zaW9ucycpOyB9LFxuICBnZXQgRWFzaW5nKCkgeyByZXR1cm4gcmVxdWlyZSgnRWFzaW5nJyk7IH0sXG4gIGdldCBmaW5kTm9kZUhhbmRsZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1JlYWN0TmF0aXZlJykuZmluZE5vZGVIYW5kbGU7IH0sXG4gIGdldCBJMThuTWFuYWdlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ0kxOG5NYW5hZ2VyJyk7IH0sXG4gIGdldCBJbWFnZVBpY2tlcklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ0ltYWdlUGlja2VySU9TJyk7IH0sXG4gIGdldCBJbnRlcmFjdGlvbk1hbmFnZXIoKSB7IHJldHVybiByZXF1aXJlKCdJbnRlcmFjdGlvbk1hbmFnZXInKTsgfSxcbiAgZ2V0IEtleWJvYXJkKCkgeyByZXR1cm4gcmVxdWlyZSgnS2V5Ym9hcmQnKTsgfSxcbiAgZ2V0IExheW91dEFuaW1hdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJ0xheW91dEFuaW1hdGlvbicpOyB9LFxuICBnZXQgTGlua2luZygpIHsgcmV0dXJuIHJlcXVpcmUoJ0xpbmtpbmcnKTsgfSxcbiAgZ2V0IE5hdGl2ZUV2ZW50RW1pdHRlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ05hdGl2ZUV2ZW50RW1pdHRlcicpOyB9LFxuICBnZXQgTmV0SW5mbygpIHsgcmV0dXJuIHJlcXVpcmUoJ05ldEluZm8nKTsgfSxcbiAgZ2V0IFBhblJlc3BvbmRlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1BhblJlc3BvbmRlcicpOyB9LFxuICBnZXQgUGVybWlzc2lvbnNBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnUGVybWlzc2lvbnNBbmRyb2lkJyk7IH0sXG4gIGdldCBQaXhlbFJhdGlvKCkgeyByZXR1cm4gcmVxdWlyZSgnUGl4ZWxSYXRpbycpOyB9LFxuICBnZXQgUHVzaE5vdGlmaWNhdGlvbklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1B1c2hOb3RpZmljYXRpb25JT1MnKTsgfSxcbiAgZ2V0IFNldHRpbmdzKCkgeyByZXR1cm4gcmVxdWlyZSgnU2V0dGluZ3MnKTsgfSxcbiAgZ2V0IFNoYXJlKCkgeyByZXR1cm4gcmVxdWlyZSgnU2hhcmUnKTsgfSxcbiAgZ2V0IFN0YXR1c0JhcklPUygpIHsgcmV0dXJuIHJlcXVpcmUoJ1N0YXR1c0JhcklPUycpOyB9LFxuICBnZXQgU3R5bGVTaGVldCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1N0eWxlU2hlZXQnKTsgfSxcbiAgZ2V0IFN5c3RyYWNlKCkgeyByZXR1cm4gcmVxdWlyZSgnU3lzdHJhY2UnKTsgfSxcbiAgZ2V0IFRpbWVQaWNrZXJBbmRyb2lkKCkgeyByZXR1cm4gcmVxdWlyZSgnVGltZVBpY2tlckFuZHJvaWQnKTsgfSxcbiAgZ2V0IFRWRXZlbnRIYW5kbGVyKCkgeyByZXR1cm4gcmVxdWlyZSgnVFZFdmVudEhhbmRsZXInKTsgfSxcbiAgZ2V0IFVJTWFuYWdlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1VJTWFuYWdlcicpOyB9LFxuICBnZXQgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMoKSB7IHJldHVybiByZXF1aXJlKCdSZWFjdE5hdGl2ZScpLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOyB9LFxuICBnZXQgVmlicmF0aW9uKCkgeyByZXR1cm4gcmVxdWlyZSgnVmlicmF0aW9uJyk7IH0sXG4gIGdldCBWaWJyYXRpb25JT1MoKSB7IHJldHVybiByZXF1aXJlKCdWaWJyYXRpb25JT1MnKTsgfSxcbiAgZ2V0IFllbGxvd0JveCgpIHsgcmV0dXJuIHJlcXVpcmUoJ1llbGxvd0JveCcpOyB9LFxuXG4gIC8vIFBsdWdpbnNcbiAgZ2V0IERldmljZUV2ZW50RW1pdHRlcigpIHsgcmV0dXJuIHJlcXVpcmUoJ1JDVERldmljZUV2ZW50RW1pdHRlcicpOyB9LFxuICBnZXQgTmF0aXZlQXBwRXZlbnRFbWl0dGVyKCkgeyByZXR1cm4gcmVxdWlyZSgnUkNUTmF0aXZlQXBwRXZlbnRFbWl0dGVyJyk7IH0sXG4gIGdldCBOYXRpdmVNb2R1bGVzKCkgeyByZXR1cm4gcmVxdWlyZSgnTmF0aXZlTW9kdWxlcycpOyB9LFxuICBnZXQgUGxhdGZvcm0oKSB7IHJldHVybiByZXF1aXJlKCdQbGF0Zm9ybScpOyB9LFxuICBnZXQgcHJvY2Vzc0NvbG9yKCkgeyByZXR1cm4gcmVxdWlyZSgncHJvY2Vzc0NvbG9yJyk7IH0sXG4gIGdldCByZXF1aXJlTmF0aXZlQ29tcG9uZW50KCkgeyByZXR1cm4gcmVxdWlyZSgncmVxdWlyZU5hdGl2ZUNvbXBvbmVudCcpOyB9LFxuICBnZXQgdGFrZVNuYXBzaG90KCkgeyByZXR1cm4gcmVxdWlyZSgndGFrZVNuYXBzaG90Jyk7IH0sXG5cbiAgLy8gUHJvcCBUeXBlc1xuICBnZXQgQ29sb3JQcm9wVHlwZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0NvbG9yUHJvcFR5cGUnKTsgfSxcbiAgZ2V0IEVkZ2VJbnNldHNQcm9wVHlwZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ0VkZ2VJbnNldHNQcm9wVHlwZScpOyB9LFxuICBnZXQgUG9pbnRQcm9wVHlwZSgpIHsgcmV0dXJuIHJlcXVpcmUoJ1BvaW50UHJvcFR5cGUnKTsgfSxcbiAgZ2V0IFZpZXdQcm9wVHlwZXMoKSB7IHJldHVybiByZXF1aXJlKCdWaWV3UHJvcFR5cGVzJyk7IH0sXG5cbiAgLy8gRGVwcmVjYXRlZFxuICBnZXQgTmF2aWdhdG9yKCkge1xuICAgIGludmFyaWFudChcbiAgICAgIGZhbHNlLFxuICAgICAgJ05hdmlnYXRvciBpcyBkZXByZWNhdGVkIGFuZCBoYXMgYmVlbiByZW1vdmVkIGZyb20gdGhpcyBwYWNrYWdlLiBJdCBjYW4gbm93IGJlIGluc3RhbGxlZCAnICtcbiAgICAgICdhbmQgaW1wb3J0ZWQgZnJvbSBgcmVhY3QtbmF0aXZlLWRlcHJlY2F0ZWQtY3VzdG9tLWNvbXBvbmVudHNgIGluc3RlYWQgb2YgYHJlYWN0LW5hdGl2ZWAuICcgK1xuICAgICAgJ0xlYXJuIGFib3V0IGFsdGVybmF0aXZlIG5hdmlnYXRpb24gc29sdXRpb25zIGF0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvbmF2aWdhdGlvbi5odG1sJ1xuICAgICk7XG4gIH0sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0TmF0aXZlO1xuIl19